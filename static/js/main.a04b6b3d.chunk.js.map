{"version":3,"sources":["requests.jsx","axios.jsx","Row.jsx","Banner.jsx","images/logo.png","Nav.jsx","app.js","index.js"],"names":["API_KEY","requests","fetchNetflixOriginals","fetchTrending","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","Movies","setMovies","useEffect","a","get","request","data","results","dataFetch","console","log","className","map","movie","src","poster_path","backdrop_path","alt","name","id","Banner","Movie","setMovie","movies","Math","floor","random","length","movieFetch","str","n","Xyz","overview","style","backgroundSize","backgroundImage","backgroundPosition","original_name","substr","Nav","navBlack","setnavBlack","window","addEventListener","scrollY","removeEventListener","logo","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a04b6b3d.chunk.js","sourcesContent":["const API_KEY = \"e80db0434276cf1a5dd7a329a71364bb\"\r\n\r\nconst requests = {\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\n\r\nexport default requests\r\n","import axios from 'axios'\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\"\r\n})\r\n\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react'\r\nimport axios from './axios'\r\nimport ScrollContainer from \"react-indiana-drag-scroll\"\r\nimport './Row.css'\r\n\r\n// image base url\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n// component\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n\r\n    // useState hook\r\n    const [Movies, setMovies] = useState([])\r\n\r\n    // useEffect hook\r\n    useEffect(() => {\r\n        async function dataFetch() {\r\n            const request = await axios.get(fetchUrl)\r\n            setMovies(request.data.results)\r\n        }\r\n        dataFetch()\r\n    }, [fetchUrl])\r\n\r\n    console.log(Movies);\r\n    // component return\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <ScrollContainer>\r\n                <div className=\"row_posters\">\r\n                    {Movies.map((movie) => (\r\n                        <img\r\n                            key={movie.id}\r\n                            className={`row_poster ${isLargeRow && \"row_posterLarge\"}`}\r\n                            src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`}\r\n                            alt={movie.name}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </ScrollContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport './Banner.css'\r\n\r\n// component\r\nconst Banner = () => {\r\n\r\n    // useState hook\r\n    const [Movie, setMovie] = useState([])\r\n\r\n    // useEffect hook\r\n    useEffect(() => {\r\n        async function movieFetch() {\r\n            const movies = await axios.get(requests.fetchNetflixOriginals)\r\n            setMovie(movies.data.results[Math.floor(Math.random() * movies.data.results.length - 1)])\r\n        }\r\n        movieFetch()\r\n    }, [])\r\n\r\n    // custom function\r\n    function truncate(str, n) {\r\n        return str?.length > n ? str?.substr(0 - n) + \"...\" : str;\r\n    }\r\n    var Xyz = Movie?.overview\r\n\r\n    // component return\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${Movie?.backdrop_path}\")`,\r\n                backgroundPosition: \"center center\"\r\n            }}>\r\n            <div className=\"banner_contents\">\r\n                <h1 className=\"banner_title\">{Movie.title || Movie?.name || Movie.original_name}</h1>\r\n\r\n                <div className=\"banner_buttons\">\r\n                    <button className=\"banner_button\">Play</button>\r\n                    <button className=\"banner_button\">My List</button>\r\n                </div>\r\n\r\n                <h1 className=\"banner_description\">{truncate(Xyz, 150)}</h1>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","export default __webpack_public_path__ + \"static/media/logo.774e8c16.png\";","import React, { useState, useEffect } from 'react'\r\nimport './Nav.css'\r\nimport logo from './images/logo.png'\r\n\r\nconst Nav = () => {\r\n    // useState hook\r\n    const [navBlack, setnavBlack] = useState(false)\r\n\r\n    // useEffect hook\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if (window.scrollY > 100) {\r\n                setnavBlack(true)\r\n            }\r\n            else setnavBlack(false)\r\n        })\r\n        return () => {\r\n            window.removeEventListener(\"scroll\")\r\n        }\r\n    }, [])\r\n    // component return\r\n    return (\r\n        <div className={`nav ${navBlack && \"black\"} `}>\r\n            <img className=\"nav_logo\" src={logo} alt=\"logo\" />\r\n            <img className=\"nav_avatar\" src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\" alt=\"avatar\" />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport requests from './requests'\r\nimport Row from './Row'\r\nimport './app.css'\r\nimport Banner from './Banner'\r\nimport Nav from './Nav'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            {/* Navbar */}\r\n            <Nav />\r\n            {/* Banner */}\r\n            <Banner />\r\n            {/* Rows */}\r\n            <Row isLargeRow title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} />\r\n            <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\r\n            <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n            <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n            <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n            <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n            <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n            <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import App from './app'\r\nimport ReactDOM from 'react-dom'\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}